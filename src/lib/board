#!/bin/bash
## ----------------------------------------------
## @file: board

COLS=`tput cols`
ROWS=`tput lines`

## enum:
##    direction 1 = NORTH
##    direction 2 = EAST
##    direction 3 = SOUTH
##    direction 4 = WEST
direction=0
delay=0.15
pos_y=$(($ROWS/2))
pos_x=$(($COLS/2))
prev_pos_x=0
prev_pos_y=0
head="@"
tail_="*"

##
## @name clear_screen()
## 
## Clears the screen
##
function clear_screen() {
    for i in $(seq 2 $ROWS)
    do
        set_position $i 0
        erase_to_end
    done
}

##
## @name init_screen() 
## 
## Initializes the screen to the size of 
## rows and columns, with a border
##
function init_screen() {
    for i in $(seq 7 $COLS)
    do
        echo -n "-"
    done
    echo
    for i in $(seq 3 $ROWS)
    do
        echo -n "|"
        for i in $(seq 9 $COLS)
        do
            echo -n " "
        done
        echo "|"
    done
    for i in $(seq 7 $COLS)
    do
        echo -n "-"
    done
    direction=4
}

##
## @name change_direction()
##
## Changes the direction of the snake. The snake cannot
## reserve direction
##
function change_direction() {
    local new_direction=$1
    if [[ $new_direction == 1 ]] && [[ $direction != 3 ]]; then
        direction=$new_direction
    elif [[ $new_direction == 2 ]] && [[ $direction != 4 ]]; then
        direction=$new_direction
    elif [[ $new_direction == 3 ]] && [[ $direction != 1 ]]; then
        direction=$new_direction
    elif [[ $new_direction == 4 ]] && [[ $direction != 2 ]]; then
        direction=$new_direction
    fi
}

##
## @name refresh_board()
##
## refreshes the board on every tick moving the 
## snake to the new location
##
function refresh_board() {
    (sleep $delay && kill -ALRM $$) &
    debug "prev $prev_pos_y $prev_pos_x"
    set_position $prev_pos_y $prev_pos_x
    echo -ne " "
    debug "curr $pos_y $pos_x"
    set_position $pos_y $pos_x
    echo -ne "$head"
    prev_pos_x=$pos_x
    prev_pos_y=$pos_y
    if [ $direction = 4 ]; then
        ((pos_x-=1))
    elif [ $direction = 2 ]; then
        ((pos_x+=1))
    elif [ $direction = 1 ]; then
        ((pos_y-=1))
    elif [ $direction = 3 ]; then
        ((pos_y+=1))
    fi
    cursor_home
}

##
## @name goodbye()
##
## prints to the screen a goodbye message
##
function goodbye() {
    clear_screen
    UP $(($ROWS/2))
    set_color "GREEN"
    FORWARD $(($COLS/2-5))
    echo "Goodbye"
    DOWN $(($ROWS/2))
    show_cursor
}

## END board
